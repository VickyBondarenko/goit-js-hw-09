{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC5BC,EAAwBH,EAAxBI,MAAOC,EAAiBL,EAAjBM,KAAMC,EAAWP,EAAXQ,OA0BrB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUN,MAAAO,IAGtBG,EAAO,CAAEJ,WAAUN,MAAAO,G,GAClBA,E,IAlCPX,EAAKmB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBAKN,IAJA,IAAMC,EAAYnB,EAAMoB,MAClBC,EAAWnB,EAAKkB,MAChBE,EAAalB,EAAOgB,MAEjBG,EAAI,EAAGA,EAAID,EAAYC,GAAK,EAAG,CACtC,IAAIC,EAAWD,EAAI,EACfE,EAAQC,OAAOP,GAAaI,EAAIF,EAEpCf,EAAckB,EAAUC,GACrBE,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAAL3B,MACjBN,EAAAmC,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANH,EAAM,OAC3DI,QAAMC,IAAI,uBAAwCF,OAAfzB,EAAS,QAAYyB,OAANH,EAAM,M,IAE3DM,OAAM,SAAAP,G,IAAGrB,EAAQqB,EAARrB,SAAU6B,EAAKR,EAAL3B,MAClBN,EAAAmC,OAAOO,QAAQ,sBAAuCL,OAAfzB,EAAS,QAAYyB,OAANI,EAAM,OAC1DH,QAAMC,IAAI,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANI,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst { delay, step, amount } = form;\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const funcDelay = delay.value;\n  const funcStep = step.value;\n  const funcAmount = amount.value;\n\n  for (let i = 0; i < funcAmount; i += 1) {\n    let position = i + 1;\n    let delay = Number(funcDelay) + i * funcStep;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$createPromise","position","delay4","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","funcDelay","value","funcStep","funcAmount","i","position1","delay1","Number","then","param","delay2","Notify","success","concat","console","log","catch","delay3","failure"],"version":3,"file":"03-promises.1e35aa5f.js.map"}